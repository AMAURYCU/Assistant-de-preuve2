# 1 "formlex.mll"
  
  open Lexing
  open Formparser
  let keyword_or_ident =
    let h = Hashtbl.create 100 in
    List.iter (fun (s, k) -> Hashtbl.add h s k)
      [ "SIGMA", SIGMA;
        "HYP", HYP;
        "fun", FUN;
        "int", INT;
        "real", REAL;
        "const", CONST;
        "sort", SORT;
        "relat", RELAT;
        "DEF", DEF;
        "prop", PROP;
        "forall", ALL;
        "exists", EXISTS;
        "not", NOT;
        "and", AND;
        "or", OR;
        "GOAL", GOAL;
        
        "TRUE", TOP;
        "FALSE", BOTTOM;
        "APPDEF", AD;

        "EXACT", IEXA;
        "AXIOME",IAX;
        "SPLIT", IAND;
        "LEFT", IOL;
        "ABSURDE", IABS;
        "INTROI", II;
        "INTROFA", IFA ;
        "USE", IEXIST;
        "MODUS", MP;
        "LEMME", LEMME;
        "CONTRAPOSE", CONTRAPOSE;
        "PUSHNEG-GOAL", PNG;
        "TIER-EXCLU", ETP;
        "EQL", EQL;
        "SWAP", SWAP;
        "CONTRADICTION", CONH;
        "SPLIT-HYP", SPLITH;
        "USEFH",UFH;
        "VAR-FROM-H",VFH;
        "INTRO", INTRO;
        "ELIM", ELIM;
        "DERIVE", DERIVE;
        "REPLACE", REPLACE;
        "UNPACK", UNPACK;
     
      ] ;
    fun s ->
      try  Hashtbl.find h s
      with Not_found -> IDENT(s)
 

# 61 "formlex.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\232\255\233\255\234\255\235\255\236\255\238\255\239\255\
    \001\000\001\000\244\255\003\000\246\255\248\255\249\255\079\000\
    \154\000\166\000\176\000\001\000\003\000\255\255\209\000\006\000\
    \075\000\253\255\247\255\028\001\038\001\048\001\241\255\237\255\
    \242\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \022\000\012\000\255\255\010\000\255\255\255\255\255\255\005\000\
    \022\000\003\000\022\000\015\000\001\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\003\000\255\255\004\000\255\255\255\255\
    \255\255";
  Lexing.lex_default =
   "\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\255\255\000\000\255\255\000\000\000\000\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\000\000\000\000\
    \000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\020\000\021\000\000\000\020\000\020\000\000\000\000\000\
    \020\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \020\000\000\000\003\000\020\000\000\000\000\000\000\000\000\000\
    \019\000\007\000\012\000\022\000\006\000\018\000\016\000\025\000\
    \017\000\017\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \017\000\017\000\011\000\010\000\008\000\009\000\032\000\031\000\
    \030\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\005\000\000\000\004\000\000\000\000\000\
    \000\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\014\000\015\000\013\000\000\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\000\000\000\000\000\000\000\000\015\000\000\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\028\000\000\000\017\000\017\000\
    \017\000\017\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\000\000\022\000\000\000\000\000\026\000\000\000\
    \000\000\022\000\022\000\022\000\000\000\022\000\000\000\000\000\
    \000\000\000\000\000\000\023\000\000\000\000\000\000\000\000\000\
    \001\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\024\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\020\000\000\000\255\255\255\255\
    \020\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\020\000\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\019\000\000\000\000\000\000\000\023\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\008\000\009\000\
    \011\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\015\000\000\000\255\255\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\255\255\255\255\255\255\255\255\015\000\255\255\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\016\000\016\000\016\000\016\000\016\000\016\000\
    \016\000\016\000\016\000\016\000\017\000\255\255\017\000\017\000\
    \017\000\017\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\255\255\024\000\255\255\255\255\018\000\255\255\
    \255\255\022\000\024\000\024\000\255\255\024\000\255\255\255\255\
    \255\255\255\255\255\255\022\000\255\255\255\255\255\255\255\255\
    \000\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\027\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\022\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 72 "formlex.mll"
      ( new_line lexbuf; token lexbuf )
# 246 "formlex.ml"

  | 1 ->
# 74 "formlex.mll"
      ( token lexbuf )
# 251 "formlex.ml"

  | 2 ->
# 75 "formlex.mll"
           (token lexbuf)
# 256 "formlex.ml"

  | 3 ->
let
# 76 "formlex.mll"
             n
# 262 "formlex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 76 "formlex.mll"
               (INTC(int_of_string(n)))
# 266 "formlex.ml"

  | 4 ->
let
# 77 "formlex.mll"
          x
# 272 "formlex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 77 "formlex.mll"
            (FC(float_of_string(x)))
# 276 "formlex.ml"

  | 5 ->
let
# 78 "formlex.mll"
             id
# 282 "formlex.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 79 "formlex.mll"
      ( keyword_or_ident id )
# 286 "formlex.ml"

  | 6 ->
# 80 "formlex.mll"
       (BEGIN)
# 291 "formlex.ml"

  | 7 ->
# 81 "formlex.mll"
       (END)
# 296 "formlex.ml"

  | 8 ->
# 82 "formlex.mll"
        (ARROW)
# 301 "formlex.ml"

  | 9 ->
# 83 "formlex.mll"
       (MUL)
# 306 "formlex.ml"

  | 10 ->
# 84 "formlex.mll"
        (COLON)
# 311 "formlex.ml"

  | 11 ->
# 85 "formlex.mll"
       (SEMI)
# 316 "formlex.ml"

  | 12 ->
# 86 "formlex.mll"
        (EQ)
# 321 "formlex.ml"

  | 13 ->
# 87 "formlex.mll"
        (INFEQ)
# 326 "formlex.ml"

  | 14 ->
# 88 "formlex.mll"
         (DPEC)
# 331 "formlex.ml"

  | 15 ->
# 89 "formlex.mll"
        (LPAR)
# 336 "formlex.ml"

  | 16 ->
# 90 "formlex.mll"
        (RPAR)
# 341 "formlex.ml"

  | 17 ->
# 91 "formlex.mll"
       (COMMA)
# 346 "formlex.ml"

  | 18 ->
# 92 "formlex.mll"
        (IMP)
# 351 "formlex.ml"

  | 19 ->
# 93 "formlex.mll"
       (LCROCH)
# 356 "formlex.ml"

  | 20 ->
# 94 "formlex.mll"
        (RCROCH)
# 361 "formlex.ml"

  | 21 ->
# 95 "formlex.mll"
        (QTE)
# 366 "formlex.ml"

  | 22 ->
# 97 "formlex.mll"
      ( failwith ("Unknown character : " ^ (lexeme lexbuf)) )
# 371 "formlex.ml"

  | 23 ->
# 98 "formlex.mll"
       (EOF)
# 376 "formlex.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

